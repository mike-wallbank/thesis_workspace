#include "services_lbne.fcl"
#include "caldata_lbne.fcl"
#include "hitfindermodules_lbne.fcl"
#include "cluster_lbne.fcl"
#include "trackfindermodules_lbne.fcl"
#include "pandoramodules_lbne.fcl"
#include "calorimetry_lbne35t.fcl"
#include "mctrutht0matching.fcl"
#include "t0reco.fcl"
#include "opticaldetectormodules_lbne.fcl"

process_name: Reco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "reco_hist.root" }
  Timing:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 } # default is one
  RandomNumberGenerator: {} #ART native random number generator
  message:      @local::lbne_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
  user:         @local::lbne35t_services
}
#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
# random number saver
  rns:                 { module_type: RandomNumberSaver }
# convert raw::RawDigit to recob::wire
  caldata:            @local::lbne35t_calwire
# cheater reconstruction
  hitcheat:           @local::lbne35t_hitcheater
  clustercheat:       @local::lbne35t_clustercheater
  trackcheat:         @local::lbne35t_trackcheater
# actual hit finder
  gaushit:            @local::lbne35t_gaushitfinder
  fasthit:            @local::lbne35t_fasthitfinder
  cchit:              @local::lbne35t_clustercrawlerhit
# disambiguation cheater that removes duplicate hits
  dcheat:             @local::lbne35t_disambigcheat
  fasthitdc:          @local::lbne35t_disambigcheat
#  dcheatcc:           @local::lbne35t_disambigcheat
# reconstruction using gaushit and disambiguration cheater
#  fuzzydc:            @local::lbne35t_fuzzycluster
  dbclusterdc:        @local::lbne35t_dbcluster
  lineclusterdc:      @local::lbne35t_linecluster
  blurredclusteringdc:@local::lbne35t_blurredclustering
  costrkdc:           @local::lbne35t_cosmictracker
  #stitchdc:           @local::lbne35t_trackstitcher
  calodc:             @local::lbne35t_calomc
  pandoradc:          @local::lbne35t_pandora
  particlestitcherdc: @local::lbne35t_particlestitcher
  pandoracalodc:      @local::lbne35t_calomc
# actual disambiguation
  hit35t:             @local::lbne35t_hitfinder35t
#  hit35tcc:           @local::lbne35t_hitfinder35t
# reconstruction using disambiguated hits
#  fuzzy:              @local::lbne35t_fuzzycluster
  dbcluster:          @local::lbne35t_dbcluster
  linecluster:        @local::lbne35t_linecluster
#  blurredclustering:  @local::lbne35t_blurredclustering
  costrk:             @local::lbne35t_cosmictracker
#  stitch:             @local::lbne35t_trackstitcher
  calo:               @local::lbne35t_calomc
  pandora:            @local::lbne35t_pandora
  particlestitcher:   @local::lbne35t_particlestitcher
  pandoracalo:        @local::lbne35t_calomc
#  kalmanhit:         @local::lbne35t_track3Dkalmanhit
  mctrutht0:          @local::lbne35t_mctrutht0matching
  mctrutht0dc:        @local::lbne35t_mctrutht0matching
  mctrutht0pandora:   @local::lbne35t_mctrutht0matching
  mctrutht0pandoradc: @local::lbne35t_mctrutht0matching	
  t0counter:          @local::lbne35t_t0counter
# photon detector reconstruction
  opflash:            @local::lbne35t_opflash 
      
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ rns, 
         #flash, counter, TPC wire signals
         caldata, 
         #cheater reco
         #hit reco with cheated disambiguation
         gaushit, dcheat,
         #cluster reco with cheated disambiguation
         #dbclusterdc,
         blurredclusteringdc
         #3D reco with cheated disambiguation
         #pandora with cheated disambiguation
         #real disambiguation
         #hit35t,
         #cluster reco
         #dbcluster#, blurredclustering,
         #3D reco
         #pandora
 ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_%tc_reco.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
 }
}
### Here, we overwrite ALL module labels with the ones defined above.
physics.producers.clustercheat.HitModuleLabel:         "hitcheat"
physics.producers.trackcheat.CheatedClusterLabel:      "clustercheat"
physics.producers.fasthitdc.ChanHitLabel:              "fasthit"
#physics.producers.hit35tcc.ChanHitLabel:               "gaushit"
#physics.producers.dcheatcc.ChanHitLabel:               "gaushit"
#physics.producers.fuzzydc.HitsModuleLabel:             "dcheat"
physics.producers.dbclusterdc.HitsModuleLabel:         "dcheat"
physics.producers.lineclusterdc.HitFinderModuleLabel:  "dcheat"
physics.producers.blurredclusteringdc.HitsModuleLabel: "dcheat"
physics.producers.costrkdc.ClusterModuleLabel:         "lineclusterdc"
#physics.producers.stitchdc.TrackModuleLabel:           "costrkdc"
#physics.producers.stitchdc.SpptModuleLabel:            "costrkdc"
physics.producers.mctrutht0dc.TrackModuleLabel:        "costrkdc"
physics.producers.calodc.TrackModuleLabel:             "costrkdc"
physics.producers.calodc.SpacePointModuleLabel:        "costrkdc"
physics.producers.calodc.T0ModuleLabel:                "mctrutht0dc"

#physics.producers.fuzzy.HitsModuleLabel:               "hit35t"
physics.producers.dbcluster.HitsModuleLabel:           "hit35t"
physics.producers.linecluster.HitFinderModuleLabel:    "hit35t"
#physics.producers.blurredclustering.HitsModuleLabel:   "hit35t"
physics.producers.costrk.ClusterModuleLabel:           "linecluster"
#physics.producers.stitch.TrackModuleLabel:             "costrk"
#physics.producers.stitch.SpptModuleLabel:              "costrk"
physics.producers.mctrutht0.TrackModuleLabel:          "costrk"
physics.producers.calo.TrackModuleLabel:               "costrk"
physics.producers.calo.SpacePointModuleLabel:          "costrk"
physics.producers.calo.T0ModuleLabel:                  "mctrutht0"
#physics.producers.kalmanhit.HitModuleLabel:            "hit35t"
#physics.producers.kalmanhit.ClusterModuleLabel:        "fuzzy"

#Pandora configurations
physics.producers.pandoradc.HitFinderModuleLabel:           "dcheat"
physics.producers.particlestitcherdc.PFParticleModuleLabel: "pandoradc"
physics.producers.particlestitcherdc.TrackModuleLabel:      "pandoradc"
physics.producers.particlestitcherdc.UseXCoordinate:        false
physics.producers.mctrutht0pandoradc.TrackModuleLabel:      "particlestitcherdc"
physics.producers.pandoracalodc.TrackModuleLabel:           "particlestitcherdc"
physics.producers.pandoracalodc.SpacePointModuleLabel:      "pandoradc"
physics.producers.pandoracalodc.T0ModuleLabel:              "mctrutht0pandoradc"

physics.producers.pandora.HitFinderModuleLabel:             "hit35t"
physics.producers.particlestitcher.PFParticleModuleLabel:   "pandora"
physics.producers.particlestitcher.TrackModuleLabel:        "pandora"
physics.producers.particlestitcher.UseXCoordinate:          false
physics.producers.mctrutht0pandora.TrackModuleLabel:        "particlestitcher"
physics.producers.pandoracalo.TrackModuleLabel:             "particlestitcher"
physics.producers.pandoracalo.SpacePointModuleLabel:        "pandora"
physics.producers.pandoracalo.T0ModuleLabel:                "mctrutht0dcpandora"

#Optical detector configuration
physics.producers.opflash.InputModule:                      "opdigi"

#physics.producers.linecluster.ClusterCrawlerAlg.TimeDelta:    [2,3,3]
#physics.producers.lineclusterdc.ClusterCrawlerAlg.TimeDelta:    [2,3,3]

