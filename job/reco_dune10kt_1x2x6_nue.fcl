#include "services_dune.fcl"
#include "caldata_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "cluster_dune.fcl"
#include "trackfindermodules_dune.fcl"
#include "pandoramodules.fcl"
##include "pandoramodules_dune.fcl"
#include "calorimetry_dune10kt.fcl"
#include "mctrutht0matching.fcl"
#include "t0reco.fcl"
#include "opticaldetectormodules_dune.fcl"
#include "trackshowerhits.fcl"
#include "showerfindermodules_dune.fcl"
#include "emshower3d.fcl"

process_name: ShowerReco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "reco_hist.root" }
  MemoryTracker:     {}
  TimeTracker:       {}
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::dunefd_services
}
services.scheduler.SkipEvent: [ProductNotFound]
services.Geometry: @local::dune10kt_1x2x6_geo

source:
{
  module_type: RootInput
  maxEvents:   -1
  saveMemoryObjectThreshold: 0
}

physics:
{

 producers:
 {
   rns:                { module_type: RandomNumberSaver }
   caldata:            @local::dunefd_calwire
   gaushit:            @local::dunefd_gaushitfinder
   dcheat:             @local::dunefd_disambigcheat
   lineclusterdc:      @local::dunefd_linecluster
   pandoradc:          @local::standard_pandoraneutrino
   blurredclusterdc:   @local::dune10kt_blurredcluster
   pmtrackdc:          @local::dunefd_pmalgtrackmaker
   emshowerdc:         @local::dune10kt_emshower
   hitfd:              @local::dunefd_hitfinderfd
   linecluster:        @local::dunefd_linecluster
   pandora:            @local::standard_pandoraneutrino
   blurredcluster:     @local::dune10kt_blurredcluster
   pmtrack:            @local::dunefd_pmalgtrackmaker
   emshower:           @local::dune10kt_emshower
 }

 analyzers:
 {
   showerAnalysis: {
      module_type: ShowerAnalysis
      HitsModuleLabel: "lineclusterdc"
      ClusterModuleLabel: "blurredclusterdc"
      ShowerModuleLabel: "emshowerdc"
   }
 }

 reco: [ rns, caldata,
         gaushit, dcheat,
         #lineclusterdc, blurredclusterdc
         #lineclusterdc, pmtrackdc, blurredclusterdc, emshowerdc
         lineclusterdc, pandoradc, pmtrackdc, blurredclusterdc, emshowerdc
         #hitfd, linecluster, pmtrack, blurredcluster, emshower
       ]

 analysis: [ showerAnalysis ]

 stream1:  [ out1 ]
 trigger_paths: [reco]
 end_paths:     [stream1, analysis]

}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_reco.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
   saveMemoryObjectThreshold: 0
 }
}

# Define module labels
physics.producers.lineclusterdc.HitFinderModuleLabel:  "dcheat"
#physics.producers.lineclusterdc.ClusterCrawlerAlg.KillGarbageClusters: 0
physics.producers.blurredclusterdc.HitsModuleLabel:    "lineclusterdc"
physics.producers.blurredclusterdc.TrackModuleLabel:   "pmtrackdc"
physics.producers.blurredclusterdc.VertexModuleLabel:  "lineclusterdc"
physics.producers.pmtrackdc.HitModuleLabel:            "lineclusterdc"
physics.producers.pmtrackdc.ClusterModuleLabel:        "lineclusterdc"

physics.producers.linecluster.HitFinderModuleLabel:  "hitfd"
#physics.producers.linecluster.ClusterCrawlerAlg.KillGarbageClusters: 0
physics.producers.blurredcluster.HitsModuleLabel:    "linecluster"
physics.producers.blurredcluster.TrackModuleLabel:   "pmtrack"
physics.producers.blurredcluster.VertexModuleLabel:  "linecluster"
physics.producers.pmtrack.HitModuleLabel:            "linecluster"
physics.producers.pmtrack.ClusterModuleLabel:        "linecluster"

physics.producers.emshowerdc.HitsModuleLabel:    "lineclusterdc"
physics.producers.emshowerdc.ClusterModuleLabel: "blurredclusterdc"
physics.producers.emshowerdc.TrackModuleLabel:   "pmtrackdc"
physics.producers.emshowerdc.MinTrackLength:     3

physics.producers.emshower.HitsModuleLabel:    "linecluster"
physics.producers.emshower.ClusterModuleLabel: "blurredcluster"
physics.producers.emshower.TrackModuleLabel:   "pmtrack"
physics.producers.emshower.MinTrackLength:     3

physics.producers.pandoradc.HitFinderModuleLabel: "lineclusterdc"
physics.producers.blurredclusterdc.PFParticleModuleLabel: "pandoradc"

physics.producers.pandora.HitFinderModuleLabel: "linecluster"
physics.producers.blurredcluster.PFParticleModuleLabel: "pandora"

# cluster
physics.producers.blurredclusterdc.CreateDebugPDF: false
physics.producers.blurredclusterdc.MergeClusters: false
physics.producers.blurredclusterdc.GlobalTPCRecon: true
physics.producers.blurredclusterdc.BlurredClusterAlg.Debug: true
# physics.producers.blurredclusterdc.BlurredClusterAlg.BlurWire: 6
# physics.producers.blurredclusterdc.BlurredClusterAlg.BlurTick: 12
# physics.producers.blurredclusterdc.BlurredClusterAlg.SigmaWire: 4
# physics.producers.blurredclusterdc.BlurredClusterAlg.SigmaTick: 6
# physics.producers.blurredclusterdc.BlurredClusterAlg.ClusterWireDistance: 2
# physics.producers.blurredclusterdc.BlurredClusterAlg.ClusterTickDistance: 2
# physics.producers.blurredclusterdc.BlurredClusterAlg.MaxTickWidthBlur: 10

# merge
#physics.producers.blurredclusterdc.BlurredClusterAlg.MinSize: 6
physics.producers.blurredclusterdc.MergeClusterAlg.ProjWidthThreshold: 0.2
physics.producers.blurredclusterdc.MergeClusterAlg.MinMergeClusterSize: 10

# shower
physics.producers.blurredclusterdc.ShowerReconOnly: false
physics.producers.emshowerdc.SaveNonCompleteShowers: true
physics.producers.emshowerdc.FindBadPlanes: false
physics.producers.emshowerdc.Debug: 0
physics.producers.emshowerdc.EMShowerAlg.MakeRMSGradientPlot: true
physics.producers.emshowerdc.EMShowerAlg.MakeGradientPlot: true
physics.producers.emshowerdc.EMShowerAlg.NumShowerSegments: 4
physics.producers.emshowerdc.Shower: -1
physics.producers.emshowerdc.Plane: -1

# analysis
physics.analyzers.showerAnalysis.ElectrondEdx: 2.0
physics.analyzers.showerAnalysis.PhotondEdx: 4.38
physics.analyzers.showerAnalysis.ElectrondEdxWidth: 0.41
physics.analyzers.showerAnalysis.PhotondEdxWidth: 1.21
