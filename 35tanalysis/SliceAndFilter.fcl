#include "services_dune.fcl"
#include "clusteralgorithms.fcl"
#include "SSPToOffline.fcl"
#include "SplitterInput.fcl"
#include "filters_dune35t.fcl"

BEGIN_PROLOG
MySelection: { SelectEvents: ["reco"] }
END_PROLOG

process_name: Trim

services:
{
  TFileService: { fileName: "test.root" }
  TimeTracker:       {}
  RandomNumberGenerator: {} 
  message:      @local::dune_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
  user:         @local::dune35t_services
}

source: @local::split_events
# source.UsePedestalFile: "true"
# source.PedestalFile: "/dune/app/users/mstancar/evdisp/offline_databaseRun_10873.csv" 
# #source.UsePedestalDefault: "true"
# source.UsePedestalDefault: "false"
# #source.UsePedestalFile: "false"
source.firstEvent: 1
source.maxEvents: 10000
source.ADCdiffThreshold:  50
source.ADCsOverThreshold: 100
source.TrigSeparation:   10
source.PreTriggerTicks:    300
source.PostTriggerTicks: 5200
source.WhichTrigger:  [3]
#source.PTBTrigs:      [111]
source.PTBTrigs:      [111, 112, 113]
# 111 - EW  112 - NU-SL 113 - NL-SU

physics:
{
#  producers:
#  {
#    fasthit:            @local::dune35t_fasthitfinder      
#  }
   filters:{
      countertrigger:  @local::cwp_filter
   }
#  analyzers:
#  {
#  }
  reco: [countertrigger]
  stream1:      [ out1 ]
  end_paths: [ stream1 ]
}



#define the output stream, there could be more than one if using filters 
   stream1:  [ out1 ]
outputs:{
  out1: 
 {
   dataTier:    "sliced"
   module_type:  RootOutput
   fileName:    "sliced.root"     
   #default file name, can override from command line with -o or --output
   SelectEvents: @local::MySelection
 }
}

# NS triggers
# physics.filters.countertrigger.firstset:  [16,16,16,16,17,17,17,17,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,26,26,26,26,27,27,27,27]
# physics.filters.countertrigger.secondset: [38,39,42,43,38,39,42,43,38,39,42,43,38,39,42,43, 0, 1, 4, 5, 0, 1, 4, 5, 0, 1, 4, 5, 0, 1, 4, 5]

# EW triggers
# [specifically to get a track as close as possible to the APA but with enough in both drift regions!]
# physics.filters.countertrigger.firstset:  [ 6, 9]
# physics.filters.countertrigger.secondset: [31,28]
# [to try to get a range of angles
physics.filters.countertrigger.firstset:  [ 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9,14,14,15,15]
physics.filters.countertrigger.secondset: [30,31,36,37,30,31,36,37,28,29,28,29,28,29,28,29]

# both
# physics.filters.countertrigger.firstset:  [16,16,16,16,17,17,17,17,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,26,26,26,26,27,27,27,27, 6, 9]
# physics.filters.countertrigger.secondset: [38,39,42,43,38,39,42,43,38,39,42,43,38,39,42,43, 0, 1, 4, 5, 0, 1, 4, 5, 0, 1, 4, 5, 0, 1, 4, 5,31,28]

#services.user.DatabaseUtil.ShouldConnect: true
