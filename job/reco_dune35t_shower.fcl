#include "services_dune.fcl"
#include "caldata_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "pandoramodules_dune.fcl"
#include "cluster_dune.fcl"
#include "trackfindermodules_dune.fcl"
#include "calorimetry_dune35t.fcl"
#include "showerfindermodules_dune.fcl"

process_name: ShowerReco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "reco_hist.root" }
  TimeTracker:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 } # default is one
  RandomNumberGenerator: {} #ART native random number generator
  message:      @local::dune_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
  user:         @local::dune35t_services
}

services.scheduler.SkipEvent: [ProductNotFound]

source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

physics:
{

 producers:
 {
   rns:                { module_type: RandomNumberSaver }
   caldata:            @local::dune35t_calwire
   gaushit:            @local::dune35t_gaushitfinder
   dcheat:             @local::dune35t_disambigcheat
   lineclusterdc:      @local::dune35t_linecluster
   pandoradc:          @local::dune35t_pandora
   blurredclusterdc:   @local::dune35t_blurredcluster
   pmtrackdc:          @local::dune35t_pmalgtrackmaker
   emshowerdc:         @local::dune35t_emshower
   hit35t:             @local::dune35t_hitfinder35t
   linecluster:        @local::dune35t_linecluster
   blurredcluster:     @local::dune35t_blurredcluster
   pmtrack:            @local::dune35t_pmalgtrackmaker
   emshower:           @local::dune35t_emshower
 }

 analyzers:
 {
   showerAnalysis: {
      module_type: ShowerAnalysis
      HitsModuleLabel: "lineclusterdc"
      ClusterModuleLabel: "blurredclusterdc"
      ShowerModuleLabel: "emshowerdc"
   }
 }

 reco: [ rns, caldata,
         gaushit, dcheat,
         #lineclusterdc, blurredclusterdc
         lineclusterdc, pmtrackdc, blurredclusterdc, emshowerdc
         #lineclusterdc, pandoradc, pmtrackdc, blurredclusterdc, emshowerdc
         #hit35t, linecluster, pmtrack, blurredcluster, emshower
       ]

 analysis: [ showerAnalysis ]

 stream1:  [ out1 ]
 trigger_paths: [reco]
 end_paths:     [stream1, analysis]

}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_%tc_reco.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
   fastCloning: false
 }
}

# Define module labels
physics.producers.lineclusterdc.HitFinderModuleLabel:  "dcheat"
#physics.producers.lineclusterdc.ClusterCrawlerAlg.KillGarbageClusters: 0
physics.producers.blurredclusterdc.HitsModuleLabel:    "lineclusterdc"
physics.producers.blurredclusterdc.TrackModuleLabel:   "pmtrackdc"
physics.producers.blurredclusterdc.VertexModuleLabel:  "lineclusterdc"
physics.producers.pmtrackdc.HitModuleLabel:            "lineclusterdc"
physics.producers.pmtrackdc.ClusterModuleLabel:        "lineclusterdc"

physics.producers.linecluster.HitFinderModuleLabel:  "hit35t"
#physics.producers.linecluster.ClusterCrawlerAlg.KillGarbageClusters: 0
physics.producers.blurredcluster.HitsModuleLabel:    "linecluster"
physics.producers.blurredcluster.TrackModuleLabel:   "pmtrack"
physics.producers.blurredcluster.VertexModuleLabel:  "linecluster"
physics.producers.pmtrack.HitModuleLabel:            "linecluster"
physics.producers.pmtrack.ClusterModuleLabel:        "linecluster"

physics.producers.emshowerdc.HitsModuleLabel:    "lineclusterdc"
physics.producers.emshowerdc.ClusterModuleLabel: "blurredclusterdc"
physics.producers.emshowerdc.TrackModuleLabel:   "pmtrackdc"
physics.producers.emshowerdc.MinTrackLength:     3

physics.producers.emshower.HitsModuleLabel:    "linecluster"
physics.producers.emshower.ClusterModuleLabel: "blurredcluster"
physics.producers.emshower.TrackModuleLabel:   "pmtrack"
physics.producers.emshower.MinTrackLength:     3

physics.producers.pandoradc.HitFinderModuleLabel: "lineclusterdc"
physics.producers.blurredclusterdc.PFParticleModuleLabel: "pandoradc"

#hits
physics.producers.gaushit.MinSig:    [6.0, 6.0, 11.0]
physics.producers.gaushit.InitWidth: [6.0, 6.0, 7.8]
physics.producers.gaushit.AreaNorms: [13.25, 13.25, 16.31]

# cluster
physics.producers.blurredclusterdc.CreateDebugPDF: false
physics.producers.blurredclusterdc.MergeClusters: false
physics.producers.blurredclusterdc.GlobalTPCRecon: true
physics.producers.blurredclusterdc.BlurredClusterAlg.Debug: true
# physics.producers.blurredclusterdc.BlurredClusterAlg.BlurWire: 6
# physics.producers.blurredclusterdc.BlurredClusterAlg.BlurTick: 12
# physics.producers.blurredclusterdc.BlurredClusterAlg.SigmaWire: 4
# physics.producers.blurredclusterdc.BlurredClusterAlg.SigmaTick: 6
# physics.producers.blurredclusterdc.BlurredClusterAlg.ClusterWireDistance: 2
# physics.producers.blurredclusterdc.BlurredClusterAlg.ClusterTickDistance: 2
# physics.producers.blurredclusterdc.BlurredClusterAlg.MaxTickWidthBlur: 10

# merge
#physics.producers.blurredclusterdc.BlurredClusterAlg.MinSize: 6
physics.producers.blurredclusterdc.MergeClusterAlg.ProjWidthThreshold: 0.2
physics.producers.blurredclusterdc.MergeClusterAlg.MinMergeClusterSize: 10

# shower
physics.producers.blurredclusterdc.ShowerReconOnly: false
physics.producers.emshowerdc.SaveNonCompleteShowers: true
physics.producers.emshowerdc.Debug: 0
physics.producers.emshowerdc.EMShowerAlg.MakeRMSGradientPlot: false
physics.producers.emshowerdc.EMShowerAlg.MakeGradientPlot: false
physics.producers.emshowerdc.EMShowerAlg.NumShowerSegments: 4
physics.producers.emshowerdc.Shower: -1
physics.producers.emshowerdc.Plane: -1

# analysis
physics.analyzers.showerAnalysis.ElectrondEdx: 2.0
physics.analyzers.showerAnalysis.PhotondEdx: 4.38
physics.analyzers.showerAnalysis.ElectrondEdxWidth: 0.41
physics.analyzers.showerAnalysis.PhotondEdxWidth: 1.21
